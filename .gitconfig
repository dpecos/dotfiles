[user]
  name = Daniel Pecos Martinez
  email = me@danielpecos.com
  signingKey = E881015C8A55678B

[alias]
  l = log --graph --pretty=format:'%C(yellow)%h%Creset %C(magenta)%G?%Creset -%C(red)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --first-parent
  lb = log --graph --pretty=format:'%C(yellow)%h%Creset %C(magenta)%G?%Creset -%C(red)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  dl = log --graph --all --decorate --stat --date=iso
  s = status
  d = difftool
  dm = difftool --tool=meld
  a = add
  ci = commit
  ca = commit --amend
  co = checkout
  cp = cherry-pick
  p = pull
  pr = pull --rebase
  f = flow
  ff = flow feature
  ffs = flow feature start
  b = branch
  amend = commit -a --amend

  unstage = reset HEAD --

  # git change-commits GIT_COMMITTER_NAME "old name" "new name"
  change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \"if [ \\\"$`echo $VAR`\\\" = '$OLD' ]; then export $VAR='$NEW'; fi\" $@; }; f "
  # from https://help.github.com/articles/remove-sensitive-data
  remove-file = "!f() { git filter-branch -f --index-filter \"git rm --cached --ignore-unmatch $1\" --prune-empty --tag-name-filter cat -- --all; }; f"

  wip = for-each-ref --sort='authordate:iso8601' --format=' %(color:green)%(authordate:relative)%09%(color:white)%(refname:short)' refs/heads

[core]
  editor = nvim
  excludesfile = ~/.gitignore_global
  autocrlf = input

[color]
  ui = true
  diff = true
  grep = true
  branch = true
  showbranch = true
  status = true

[color "diff"]
  plain = normal dim
  meta = yellow
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
  commit = yellow bold

[color "status"]
  header = normal dim
  added = yellow
  untracked = magenta

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = red

[pull]
  rebase = false

[push]
  followTags = true

[status]
  submoduleSummary = true

[fetch]
  recurseSubmodules = true

[diff]
  tool = vimdiff
  submodule = log

[difftool]
  prompt = false
  conflictstyle = diff3

[merge]
  tool = vimdiff

[mergetool]
  prompt = false

#[url "git@github.com:"]
#    insteadOf = https://github.com/

#[url "git@gitlab.com:"]
#    insteadOf = https://gitlab.com/

[difftool "meld"]
  trustExitCode = true
  cmd = open -W -a Meld --args \"$LOCAL\" \"$REMOTE\"

[mergetool "meld"]
  trustExitCode = true
  cmd = open -W -a Meld --args --auto-merge \"$LOCAL\" \"$BASE\" \"$REMOTE\" --output=\"$MERGED\"

[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22

[commit]
  gpgsign = true

[tag]
  forceSignAnnotated = true

[init]
  defaultBranch = master

[include]
  path = ~/.gitconfig.local

[includeIf "gitdir:~/projects/"]
  path = ~/projects/.gitconfig
